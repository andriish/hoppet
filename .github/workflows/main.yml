name: build
on:
 push:
 pull_request:
 schedule:
#Every 50 days at midnight 
    - cron:  "0 0 1/600 * *"

jobs:
  compilejobFedora:
    name: Fedorax86_64_GNU
    runs-on: ubuntu-latest
    container:
        image: fedora:latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Install 
      run: |
           yum -y install  gcc gcc-c++ gcc-gfortran make wget which cmake cmake-data cmake-filesystem lhapdf lhapdf-devel
    - name: Compile
      run: |
          cmake -S . -B BUILD -DCMAKE_INSTALL_PREFIX=$(pwd)/../INSTALL -DHOPPET_ENABLE_FPES=ON -DCMAKE_BUILD_TYPE=Debug
          cmake --build BUILD -j
          cmake --install BUILD
          ctest --test-dir BUILD -j 2 --output-on-failure


  compilejob:
    name: Rocky9x86_64_Intel_HPCKIT
    runs-on: ubuntu-latest
    container:
        image: intel/oneapi-hpckit:2024.0.1-devel-rockylinux9
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Install 
      run: |
           yum -y install epel-release
           yum -y install make wget which cmake cmake-data cmake-filesystem lhapdf lhapdf-devel
    - name: Compile_with_ifx
      run: |
          cmake -S . -B BUILDifx -DCMAKE_Fortran_COMPILER=ifx -DCMAKE_INSTALL_PREFIX=$(pwd)/../INSTALLifx
          cmake --build BUILDifx -j
          cmake --install BUILDifx
          ctest --test-dir BUILDifx -j 2 --output-on-failure
    - name: Compile_with_ifort
      run: |
          cmake -S . -B BUILDifort -DCMAKE_Fortran_COMPILER=ifort -DCMAKE_INSTALL_PREFIX=$(pwd)/../INSTALLifort
          cmake --build BUILDifort -j
          cmake --install BUILDifort
          ctest --test-dir BUILDifort -j 2 --output-on-failure

  compilejobFedora_AOCC:
    name: Fedorax86_64_AOCC
    runs-on: ubuntu-latest
    container:
        image: fedora:latest
    steps:
    - name: Install 
      run: |
           yum -y install  gcc gcc-c++ make wget which cmake cmake-data cmake-filesystem lhapdf lhapdf-devel libquadmath-devel libquadmath
           yum -y install https://download.amd.com/developer/eula/aocc/aocc-4-1/aocc-compiler-4.1.0-1.x86_64.rpm
    - name: Compile
      continue-on-error: true    
      run: |
          source /opt/AMD/aocc-compiler-4.1.0/setenv_AOCC.sh
          export PATH=$PATH:/opt/AMD/aocc-compiler-4.1.0/bin/
          cmake -S . -B BUILD  -DCMAKE_Fortran_COMPILER=flang -DCMAKE_INSTALL_PREFIX=$(pwd)/../INSTALL
          name: AOCC
          path: BUILD/example_f*/*.this_output

  compilejobRocky8_NVHPC:
    name: Rocky8x86_64_NVHPC
    runs-on: ubuntu-latest
    container:
        image: nvcr.io/nvidia/nvhpc:23.11-devel-cuda12.3-rockylinux8
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Install 
      run: |
           yum -y install epel-release
           yum -y install  gcc gcc-c++ make wget which cmake cmake-data cmake-filesystem lhapdf lhapdf-devel
    - name: Compile
      continue-on-error: true    
      run: |
          cmake -S . -B BUILD  -DCMAKE_Fortran_COMPILER=nvfortran -DCMAKE_INSTALL_PREFIX=$(pwd)/../INSTALL
          cmake --build BUILD -j
          cmake --install BUILD
          ctest --test-dir BUILD -j 2 --output-on-failure
    - uses: actions/upload-artifact@v4
      with:
          name: NVHPC
          path: BUILD/example_f*/*.this_output

  compilejobCentos7_IBM_XL:
    name: Centos7ppc64le_IBM_XL
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: QEMU
      run: |
           set -x
           sudo apt update
           sudo  apt install --yes binfmt-support qemu-user-static wget
    - name: Compile_with_xlf
      uses: addnab/docker-run-action@v3
      with:
        image: ppc64le/centos
        options: -v ${{ github.workspace }}:/work --platform=linux/ppc64le 
        run: |
          sed -i 's/mirrorlist/#mirrorlist/g' /etc/yum.repos.d/CentOS-*
          sed -i 's|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' /etc/yum.repos.d/CentOS-*
          yum -y install epel-release wget
          wget https://public.dhe.ibm.com/software/server/POWER/Linux/xl-compiler/eval/ppc64le/rhel7/ibm-xl-compiler-eval.repo -O /etc/yum.repos.d/ibm-xl-compiler-eval.repo
          sed -i 's/http:/https:/g' /etc/yum.repos.d/ibm-xl-compiler-eval.repo
          yum -y install xlf cmake3 lhapdf-devel wget
          pwd 
          ls
          cd work
          export PATH=/opt/ibm/xlf/16.1.1/bin/:$PATH
          export LICENSE=accept 
          xlf_configure <<< 1 >/dev/null
          cmake3 -S . -B BUILDxlf -DCMAKE_Fortran_COMPILER=xlf -DCMAKE_INSTALL_PREFIX=$(pwd)/../INSTALLxlf
          cmake3 --build BUILDxlf -j
          cmake3 --install BUILDxlf
          ctest3 --test-dir BUILDxlf -j 2 --output-on-failure


  compilejobRocky9_ARM:
    name: Rocky9aarch64_ARM
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: QEMU
      run: |
           set -x
           sudo apt update
           sudo  apt install --yes binfmt-support qemu-user-static wget
    - name: Compile_with_arm
      uses: addnab/docker-run-action@v3
      with:
        image: arm64v8/rockylinux:9
        options: -v ${{ github.workspace }}:/work --platform=linux/arm64v8
        run: |
          sed -i 's/mirrorlist/#mirrorlist/g' /etc/yum.repos.d/CentOS-*
          sed -i 's|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' /etc/yum.repos.d/CentOS-*
          yum -y install epel-release wget
          wget https://armkeil.blob.core.windows.net/developer/Files/downloads/hpc/arm-compiler-for-linux/23-10/arm-compiler-for-linux_23.10_RHEL-9_aarch64.tar
          tar -xvf arm-compiler-for-linux_23.10_RHEL-9_aarch64.tar
          cd arm-compiler-for-linux_23.10_RHEL-9_aarch64
          sudo ./arm-compiler-for-linux_23.10_RHEL-9_aarch64.sh -a
          cd ..
          cd work
          ls /opt/arm
          export PATH=/opt/arm/bin:$PATH
          cmake3 -S . -B BUILDarmflang -DCMAKE_Fortran_COMPILER=armflang -DCMAKE_INSTALL_PREFIX=$(pwd)/../INSTALLarmflang
          cmake3 --build BUILDarmflang -j
          cmake3 --install BUILDarmflang
          ctest3 --test-dir BUILDarmflang -j 2 --output-on-failure


  compilejobOSX:
    runs-on: macos-latest
    name: OSXx86_64_GNU
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Install 
      run: |
          brew install wget coreutils gcc
          brew tap davidchall/hep
          brew install lhapdf
    - name: Compile
      run: |
          cmake -S . -B BUILD -DCMAKE_INSTALL_PREFIX=$(pwd)/../INSTALL -DCMAKE_Fortran_COMPILER=gfortran-13  -DHOPPET_ENABLE_FPES=ON -DCMAKE_BUILD_TYPE=Debug
          cmake --build BUILD -j 2
          cmake --install BUILD
          ctest --test-dir BUILD -j 2 --output-on-failure
